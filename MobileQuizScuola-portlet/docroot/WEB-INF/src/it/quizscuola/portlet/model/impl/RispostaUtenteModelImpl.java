/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.quizscuola.portlet.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import it.quizscuola.portlet.model.RispostaUtente;
import it.quizscuola.portlet.model.RispostaUtenteModel;
import it.quizscuola.portlet.model.RispostaUtenteSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the RispostaUtente service. Represents a row in the &quot;quiz_RispostaUtente&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.quizscuola.portlet.model.RispostaUtenteModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RispostaUtenteImpl}.
 * </p>
 *
 * @author Salvatore
 * @see RispostaUtenteImpl
 * @see it.quizscuola.portlet.model.RispostaUtente
 * @see it.quizscuola.portlet.model.RispostaUtenteModel
 * @generated
 */
@JSON(strict = true)
public class RispostaUtenteModelImpl extends BaseModelImpl<RispostaUtente>
	implements RispostaUtenteModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a risposta utente model instance should use the {@link it.quizscuola.portlet.model.RispostaUtente} interface instead.
	 */
	public static final String TABLE_NAME = "quiz_RispostaUtente";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "idRispostaUtente", Types.BIGINT },
			{ "idRisposta", Types.BIGINT },
			{ "idUtente", Types.BIGINT },
			{ "dataRisposta", Types.TIMESTAMP },
			{ "idDomanda", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table quiz_RispostaUtente (uuid_ VARCHAR(75) null,idRispostaUtente LONG not null primary key,idRisposta LONG,idUtente LONG,dataRisposta DATE null,idDomanda LONG)";
	public static final String TABLE_SQL_DROP = "drop table quiz_RispostaUtente";
	public static final String ORDER_BY_JPQL = " ORDER BY rispostaUtente.idDomanda ASC";
	public static final String ORDER_BY_SQL = " ORDER BY quiz_RispostaUtente.idDomanda ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.it.quizscuola.portlet.model.RispostaUtente"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.it.quizscuola.portlet.model.RispostaUtente"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.it.quizscuola.portlet.model.RispostaUtente"),
			true);
	public static long IDDOMANDA_COLUMN_BITMASK = 1L;
	public static long IDUTENTE_COLUMN_BITMASK = 2L;
	public static long UUID_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static RispostaUtente toModel(RispostaUtenteSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		RispostaUtente model = new RispostaUtenteImpl();

		model.setUuid(soapModel.getUuid());
		model.setIdRispostaUtente(soapModel.getIdRispostaUtente());
		model.setIdRisposta(soapModel.getIdRisposta());
		model.setIdUtente(soapModel.getIdUtente());
		model.setDataRisposta(soapModel.getDataRisposta());
		model.setIdDomanda(soapModel.getIdDomanda());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<RispostaUtente> toModels(RispostaUtenteSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<RispostaUtente> models = new ArrayList<RispostaUtente>(soapModels.length);

		for (RispostaUtenteSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.it.quizscuola.portlet.model.RispostaUtente"));

	public RispostaUtenteModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _idRispostaUtente;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setIdRispostaUtente(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _idRispostaUtente;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return RispostaUtente.class;
	}

	@Override
	public String getModelClassName() {
		return RispostaUtente.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("idRispostaUtente", getIdRispostaUtente());
		attributes.put("idRisposta", getIdRisposta());
		attributes.put("idUtente", getIdUtente());
		attributes.put("dataRisposta", getDataRisposta());
		attributes.put("idDomanda", getIdDomanda());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long idRispostaUtente = (Long)attributes.get("idRispostaUtente");

		if (idRispostaUtente != null) {
			setIdRispostaUtente(idRispostaUtente);
		}

		Long idRisposta = (Long)attributes.get("idRisposta");

		if (idRisposta != null) {
			setIdRisposta(idRisposta);
		}

		Long idUtente = (Long)attributes.get("idUtente");

		if (idUtente != null) {
			setIdUtente(idUtente);
		}

		Date dataRisposta = (Date)attributes.get("dataRisposta");

		if (dataRisposta != null) {
			setDataRisposta(dataRisposta);
		}

		Long idDomanda = (Long)attributes.get("idDomanda");

		if (idDomanda != null) {
			setIdDomanda(idDomanda);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getIdRispostaUtente() {
		return _idRispostaUtente;
	}

	@Override
	public void setIdRispostaUtente(long idRispostaUtente) {
		_idRispostaUtente = idRispostaUtente;
	}

	@JSON
	@Override
	public long getIdRisposta() {
		return _idRisposta;
	}

	@Override
	public void setIdRisposta(long idRisposta) {
		_idRisposta = idRisposta;
	}

	@JSON
	@Override
	public long getIdUtente() {
		return _idUtente;
	}

	@Override
	public void setIdUtente(long idUtente) {
		_columnBitmask |= IDUTENTE_COLUMN_BITMASK;

		if (!_setOriginalIdUtente) {
			_setOriginalIdUtente = true;

			_originalIdUtente = _idUtente;
		}

		_idUtente = idUtente;
	}

	public long getOriginalIdUtente() {
		return _originalIdUtente;
	}

	@JSON
	@Override
	public Date getDataRisposta() {
		return _dataRisposta;
	}

	@Override
	public void setDataRisposta(Date dataRisposta) {
		_dataRisposta = dataRisposta;
	}

	@JSON
	@Override
	public long getIdDomanda() {
		return _idDomanda;
	}

	@Override
	public void setIdDomanda(long idDomanda) {
		_columnBitmask = -1L;

		if (!_setOriginalIdDomanda) {
			_setOriginalIdDomanda = true;

			_originalIdDomanda = _idDomanda;
		}

		_idDomanda = idDomanda;
	}

	public long getOriginalIdDomanda() {
		return _originalIdDomanda;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			RispostaUtente.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public RispostaUtente toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (RispostaUtente)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		RispostaUtenteImpl rispostaUtenteImpl = new RispostaUtenteImpl();

		rispostaUtenteImpl.setUuid(getUuid());
		rispostaUtenteImpl.setIdRispostaUtente(getIdRispostaUtente());
		rispostaUtenteImpl.setIdRisposta(getIdRisposta());
		rispostaUtenteImpl.setIdUtente(getIdUtente());
		rispostaUtenteImpl.setDataRisposta(getDataRisposta());
		rispostaUtenteImpl.setIdDomanda(getIdDomanda());

		rispostaUtenteImpl.resetOriginalValues();

		return rispostaUtenteImpl;
	}

	@Override
	public int compareTo(RispostaUtente rispostaUtente) {
		int value = 0;

		if (getIdDomanda() < rispostaUtente.getIdDomanda()) {
			value = -1;
		}
		else if (getIdDomanda() > rispostaUtente.getIdDomanda()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof RispostaUtente)) {
			return false;
		}

		RispostaUtente rispostaUtente = (RispostaUtente)obj;

		long primaryKey = rispostaUtente.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		RispostaUtenteModelImpl rispostaUtenteModelImpl = this;

		rispostaUtenteModelImpl._originalUuid = rispostaUtenteModelImpl._uuid;

		rispostaUtenteModelImpl._originalIdUtente = rispostaUtenteModelImpl._idUtente;

		rispostaUtenteModelImpl._setOriginalIdUtente = false;

		rispostaUtenteModelImpl._originalIdDomanda = rispostaUtenteModelImpl._idDomanda;

		rispostaUtenteModelImpl._setOriginalIdDomanda = false;

		rispostaUtenteModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<RispostaUtente> toCacheModel() {
		RispostaUtenteCacheModel rispostaUtenteCacheModel = new RispostaUtenteCacheModel();

		rispostaUtenteCacheModel.uuid = getUuid();

		String uuid = rispostaUtenteCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			rispostaUtenteCacheModel.uuid = null;
		}

		rispostaUtenteCacheModel.idRispostaUtente = getIdRispostaUtente();

		rispostaUtenteCacheModel.idRisposta = getIdRisposta();

		rispostaUtenteCacheModel.idUtente = getIdUtente();

		Date dataRisposta = getDataRisposta();

		if (dataRisposta != null) {
			rispostaUtenteCacheModel.dataRisposta = dataRisposta.getTime();
		}
		else {
			rispostaUtenteCacheModel.dataRisposta = Long.MIN_VALUE;
		}

		rispostaUtenteCacheModel.idDomanda = getIdDomanda();

		return rispostaUtenteCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", idRispostaUtente=");
		sb.append(getIdRispostaUtente());
		sb.append(", idRisposta=");
		sb.append(getIdRisposta());
		sb.append(", idUtente=");
		sb.append(getIdUtente());
		sb.append(", dataRisposta=");
		sb.append(getDataRisposta());
		sb.append(", idDomanda=");
		sb.append(getIdDomanda());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("it.quizscuola.portlet.model.RispostaUtente");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idRispostaUtente</column-name><column-value><![CDATA[");
		sb.append(getIdRispostaUtente());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idRisposta</column-name><column-value><![CDATA[");
		sb.append(getIdRisposta());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idUtente</column-name><column-value><![CDATA[");
		sb.append(getIdUtente());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dataRisposta</column-name><column-value><![CDATA[");
		sb.append(getDataRisposta());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idDomanda</column-name><column-value><![CDATA[");
		sb.append(getIdDomanda());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = RispostaUtente.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			RispostaUtente.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _idRispostaUtente;
	private long _idRisposta;
	private long _idUtente;
	private long _originalIdUtente;
	private boolean _setOriginalIdUtente;
	private Date _dataRisposta;
	private long _idDomanda;
	private long _originalIdDomanda;
	private boolean _setOriginalIdDomanda;
	private long _columnBitmask;
	private RispostaUtente _escapedModel;
}
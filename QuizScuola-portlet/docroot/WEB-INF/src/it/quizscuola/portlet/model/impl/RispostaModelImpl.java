/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.quizscuola.portlet.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import it.quizscuola.portlet.model.Risposta;
import it.quizscuola.portlet.model.RispostaModel;
import it.quizscuola.portlet.model.RispostaSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Risposta service. Represents a row in the &quot;Quiz_Risposta&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.quizscuola.portlet.model.RispostaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RispostaImpl}.
 * </p>
 *
 * @author Salvatore
 * @see RispostaImpl
 * @see it.quizscuola.portlet.model.Risposta
 * @see it.quizscuola.portlet.model.RispostaModel
 * @generated
 */
@JSON(strict = true)
public class RispostaModelImpl extends BaseModelImpl<Risposta>
	implements RispostaModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a risposta model instance should use the {@link it.quizscuola.portlet.model.Risposta} interface instead.
	 */
	public static final String TABLE_NAME = "Quiz_Risposta";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "idRisposta", Types.BIGINT },
			{ "descRisposta", Types.VARCHAR },
			{ "posizione", Types.INTEGER },
			{ "esatta", Types.BOOLEAN },
			{ "idDomanda", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table Quiz_Risposta (uuid_ VARCHAR(75) null,idRisposta LONG not null primary key,descRisposta VARCHAR(75) null,posizione INTEGER,esatta BOOLEAN,idDomanda LONG,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table Quiz_Risposta";
	public static final String ORDER_BY_JPQL = " ORDER BY risposta.posizione ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Quiz_Risposta.posizione ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.it.quizscuola.portlet.model.Risposta"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.it.quizscuola.portlet.model.Risposta"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.it.quizscuola.portlet.model.Risposta"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long UUID_COLUMN_BITMASK = 4L;
	public static long POSIZIONE_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Risposta toModel(RispostaSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Risposta model = new RispostaImpl();

		model.setUuid(soapModel.getUuid());
		model.setIdRisposta(soapModel.getIdRisposta());
		model.setDescRisposta(soapModel.getDescRisposta());
		model.setPosizione(soapModel.getPosizione());
		model.setEsatta(soapModel.getEsatta());
		model.setIdDomanda(soapModel.getIdDomanda());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Risposta> toModels(RispostaSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Risposta> models = new ArrayList<Risposta>(soapModels.length);

		for (RispostaSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.it.quizscuola.portlet.model.Risposta"));

	public RispostaModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _idRisposta;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setIdRisposta(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _idRisposta;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Risposta.class;
	}

	@Override
	public String getModelClassName() {
		return Risposta.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("idRisposta", getIdRisposta());
		attributes.put("descRisposta", getDescRisposta());
		attributes.put("posizione", getPosizione());
		attributes.put("esatta", getEsatta());
		attributes.put("idDomanda", getIdDomanda());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long idRisposta = (Long)attributes.get("idRisposta");

		if (idRisposta != null) {
			setIdRisposta(idRisposta);
		}

		String descRisposta = (String)attributes.get("descRisposta");

		if (descRisposta != null) {
			setDescRisposta(descRisposta);
		}

		Integer posizione = (Integer)attributes.get("posizione");

		if (posizione != null) {
			setPosizione(posizione);
		}

		Boolean esatta = (Boolean)attributes.get("esatta");

		if (esatta != null) {
			setEsatta(esatta);
		}

		Long idDomanda = (Long)attributes.get("idDomanda");

		if (idDomanda != null) {
			setIdDomanda(idDomanda);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getIdRisposta() {
		return _idRisposta;
	}

	@Override
	public void setIdRisposta(long idRisposta) {
		_idRisposta = idRisposta;
	}

	@JSON
	@Override
	public String getDescRisposta() {
		if (_descRisposta == null) {
			return StringPool.BLANK;
		}
		else {
			return _descRisposta;
		}
	}

	@Override
	public void setDescRisposta(String descRisposta) {
		_descRisposta = descRisposta;
	}

	@JSON
	@Override
	public int getPosizione() {
		return _posizione;
	}

	@Override
	public void setPosizione(int posizione) {
		_columnBitmask = -1L;

		_posizione = posizione;
	}

	@JSON
	@Override
	public boolean getEsatta() {
		return _esatta;
	}

	@Override
	public boolean isEsatta() {
		return _esatta;
	}

	@Override
	public void setEsatta(boolean esatta) {
		_esatta = esatta;
	}

	@JSON
	@Override
	public long getIdDomanda() {
		return _idDomanda;
	}

	@Override
	public void setIdDomanda(long idDomanda) {
		_idDomanda = idDomanda;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				Risposta.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Risposta.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Risposta toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Risposta)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		RispostaImpl rispostaImpl = new RispostaImpl();

		rispostaImpl.setUuid(getUuid());
		rispostaImpl.setIdRisposta(getIdRisposta());
		rispostaImpl.setDescRisposta(getDescRisposta());
		rispostaImpl.setPosizione(getPosizione());
		rispostaImpl.setEsatta(getEsatta());
		rispostaImpl.setIdDomanda(getIdDomanda());
		rispostaImpl.setGroupId(getGroupId());
		rispostaImpl.setCompanyId(getCompanyId());
		rispostaImpl.setUserId(getUserId());
		rispostaImpl.setUserName(getUserName());
		rispostaImpl.setCreateDate(getCreateDate());
		rispostaImpl.setModifiedDate(getModifiedDate());

		rispostaImpl.resetOriginalValues();

		return rispostaImpl;
	}

	@Override
	public int compareTo(Risposta risposta) {
		int value = 0;

		if (getPosizione() < risposta.getPosizione()) {
			value = -1;
		}
		else if (getPosizione() > risposta.getPosizione()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Risposta)) {
			return false;
		}

		Risposta risposta = (Risposta)obj;

		long primaryKey = risposta.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		RispostaModelImpl rispostaModelImpl = this;

		rispostaModelImpl._originalUuid = rispostaModelImpl._uuid;

		rispostaModelImpl._originalGroupId = rispostaModelImpl._groupId;

		rispostaModelImpl._setOriginalGroupId = false;

		rispostaModelImpl._originalCompanyId = rispostaModelImpl._companyId;

		rispostaModelImpl._setOriginalCompanyId = false;

		rispostaModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Risposta> toCacheModel() {
		RispostaCacheModel rispostaCacheModel = new RispostaCacheModel();

		rispostaCacheModel.uuid = getUuid();

		String uuid = rispostaCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			rispostaCacheModel.uuid = null;
		}

		rispostaCacheModel.idRisposta = getIdRisposta();

		rispostaCacheModel.descRisposta = getDescRisposta();

		String descRisposta = rispostaCacheModel.descRisposta;

		if ((descRisposta != null) && (descRisposta.length() == 0)) {
			rispostaCacheModel.descRisposta = null;
		}

		rispostaCacheModel.posizione = getPosizione();

		rispostaCacheModel.esatta = getEsatta();

		rispostaCacheModel.idDomanda = getIdDomanda();

		rispostaCacheModel.groupId = getGroupId();

		rispostaCacheModel.companyId = getCompanyId();

		rispostaCacheModel.userId = getUserId();

		rispostaCacheModel.userName = getUserName();

		String userName = rispostaCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			rispostaCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			rispostaCacheModel.createDate = createDate.getTime();
		}
		else {
			rispostaCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			rispostaCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			rispostaCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return rispostaCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", idRisposta=");
		sb.append(getIdRisposta());
		sb.append(", descRisposta=");
		sb.append(getDescRisposta());
		sb.append(", posizione=");
		sb.append(getPosizione());
		sb.append(", esatta=");
		sb.append(getEsatta());
		sb.append(", idDomanda=");
		sb.append(getIdDomanda());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("it.quizscuola.portlet.model.Risposta");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idRisposta</column-name><column-value><![CDATA[");
		sb.append(getIdRisposta());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>descRisposta</column-name><column-value><![CDATA[");
		sb.append(getDescRisposta());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>posizione</column-name><column-value><![CDATA[");
		sb.append(getPosizione());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esatta</column-name><column-value><![CDATA[");
		sb.append(getEsatta());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idDomanda</column-name><column-value><![CDATA[");
		sb.append(getIdDomanda());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Risposta.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Risposta.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _idRisposta;
	private String _descRisposta;
	private int _posizione;
	private boolean _esatta;
	private long _idDomanda;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _columnBitmask;
	private Risposta _escapedModel;
}